name: Tertiary FD Defense (15m PT)

on:
  workflow_dispatch:
  schedule:
    # Runs at :11/:26/:41/:56 each hour (UTC). We'll gate to LA hours below.
    - cron: "11,26,41,56 * * * *"

# Needed for Workload Identity Federation and repo access
permissions:
  id-token: write
  contents: read

jobs:
  run-tertiary-defense:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      # ----- App config -----
      GCP_PROJECT: sac-vald-hub
      BQ_DATASET: analytics
      BQ_LOCATION: US

      VALD_CLIENT_ID:     ${{ secrets.VALD_CLIENT_ID }}
      VALD_CLIENT_SECRET: ${{ secrets.VALD_CLIENT_SECRET }}
      VALD_TENANT_ID:     ${{ secrets.VALD_TENANT_ID }}
      VALD_REGION:        use

    steps:
      - name: Show current time (UTC/PT)
        run: |
          echo "UTC now: $(date -u)"
          echo "LA  now: $(TZ=America/Los_Angeles date)"

      # DST-safe hour gating only (no minute modulo). GitHub cron is best-effort and can drift several minutes,
      # so we don't reject based on exact minute. Let cron enforce the 15m cadence; we only enforce PT window.
      - name: Gate to 06:00–19:59 PT
        id: gate
        shell: bash
        run: |
          LA_HOUR=$(TZ=America/Los_Angeles date +%H)
          if [ "$LA_HOUR" -ge 6 ] && [ "$LA_HOUR" -lt 20 ]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
            echo "Proceeding (within 06:00–19:59 PT)."
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
            echo "Outside 06:00–19:59 PT – skipping."
          fi

      - name: Stop if gate says skip
        if: steps.gate.outputs.ok != 'true'
        run: exit 0

      - uses: actions/checkout@v4
        if: steps.gate.outputs.ok == 'true'

      - name: Authenticate to Google Cloud (WIF)
        id: auth
        if: steps.gate.outputs.ok == 'true'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/884700516106/locations/global/workloadIdentityPools/gha-pool/providers/github
          service_account: gha-bq@sac-vald-hub.iam.gserviceaccount.com
          create_credentials_file: true
          token_format: access_token
          access_token_lifetime: 3600s

      - name: Setup gcloud SDK
        if: steps.gate.outputs.ok == 'true'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: sac-vald-hub
          install_components: bq

      - name: Test GCP Authentication
        if: steps.gate.outputs.ok == 'true'
        run: |
          gcloud auth list
          bq ls --project_id="${GCP_PROJECT}" || echo "BigQuery test failed"

      - uses: r-lib/actions/setup-r@v2
        if: steps.gate.outputs.ok == 'true'
        with:
          use-public-rspm: true

      # Cache R library to speed up installs
      - name: Cache R packages
        if: steps.gate.outputs.ok == 'true'
        uses: actions/cache@v3
        with:
          path: /home/runner/work/_temp/Library
          key: ${{ runner.os }}-r-${{ hashFiles('**/*.R') }}
          restore-keys: |
            ${{ runner.os }}-r-

      - name: System libs
        if: steps.gate.outputs.ok == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev libssl-dev libxml2-dev \
            libfontconfig1-dev libfreetype6-dev libpng-dev \
            libtiff5-dev libjpeg-dev zlib1g-dev \
            libharfbuzz-dev libfribidi-dev \
            libsecret-1-dev libsecret-1-0

      - name: Verify script exists
        if: steps.gate.outputs.ok == 'true'
        run: test -f .github/scripts/tertiary_fd_defense.R

      - name: Install R packages (CRAN)
        if: steps.gate.outputs.ok == 'true'
        run: |
          R -q -e "
          packages <- c(
            'DBI','bigrquery',
            'dplyr','tidyr','readr','stringr','purrr','tibble',
            'data.table','hms','lubridate',
            'httr','jsonlite','xml2','curl',
            'valdr','gargle',
            'rlang','lifecycle'
          )
          install.packages(
            packages,
            repos='https://packagemanager.posit.co/cran/__linux__/noble/latest',
            Ncpus=parallel::detectCores()
          )
          for (pkg in packages) if (!suppressWarnings(require(pkg, character.only=TRUE, quietly=TRUE))) stop('Failed to load: ', pkg)
          cat('All packages installed and loaded successfully\n')
          "

      - name: Run tertiary defense
        if: steps.gate.outputs.ok == 'true'
        run: |
          set -e
          Rscript .github/scripts/tertiary_fd_defense.R
