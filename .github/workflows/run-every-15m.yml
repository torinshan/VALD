name: R → BigQuery every 15m (WIF)
libcurl4-openssl-dev libssl-dev libxml2-dev \
libfontconfig1-dev libfreetype6-dev libpng-dev \
libtiff5-dev libjpeg-dev zlib1g-dev \
libharfbuzz-dev libfribidi-dev \
libsecret-1-dev libsecret-1-0


- name: Verify script exists
if: steps.gate.outputs.ok == 'true'
run: test -f .github/scripts/run.R


- name: Install R packages (CRAN)
if: steps.gate.outputs.ok == 'true'
run: |
R -q -e "
packages <- c(
'DBI','bigrquery',
'dplyr','tidyr','readr','stringr','purrr','tibble',
'data.table','hms','lubridate',
'httr','jsonlite','xml2','curl',
'valdr','gargle',
'rlang','lifecycle'
)
install.packages(
packages,
repos='https://packagemanager.posit.co/cran/__linux__/noble/latest',
Ncpus=parallel::detectCores()
)
for (pkg in packages) if (!suppressWarnings(require(pkg, character.only=TRUE, quietly=TRUE))) stop('Failed to load: ', pkg)
cat('All packages installed and loaded successfully\n')
"


- name: Run R pipeline
if: steps.gate.outputs.ok == 'true'
env:
VALD_CLIENT_ID: ${{ secrets.VALD_CLIENT_ID }}
VALD_CLIENT_SECRET: ${{ secrets.VALD_CLIENT_SECRET }}
VALD_TENANT_ID: ${{ secrets.VALD_TENANT_ID }}
VALD_REGION: use
run: |
set -e
Rscript .github/scripts/run.R


- name: Ensure BigQuery dataset exists
if: steps.gate.outputs.ok == 'true' && always()
run: |
bq mk --dataset --location=US "${GCP_PROJECT}:${BQ_DATASET}" || echo "Dataset exists or creation failed"


- name: Check processing logs (tail)
id: tail_logs
if: steps.gate.outputs.ok == 'true' && always()
run: |
{
bq query --use_legacy_sql=false --location=US --format=pretty \
"SELECT FORMAT_TIMESTAMP('%Y-%m-%d %H:%M:%S %Z', timestamp) AS ts, level, message
FROM \`${GCP_PROJECT}.${BQ_DATASET}.vald_processing_log\`
WHERE run_id = '${{ github.run_id }}'
ORDER BY timestamp DESC
LIMIT 30";
} 2>&1 | tee /tmp/log_tail.txt || echo "No BigQuery logs found for this run."
echo 'last<<EOF' >> "$GITHUB_OUTPUT"
cat /tmp/log_tail.txt >> "$GITHUB_OUTPUT"
echo 'EOF' >> "$GITHUB_OUTPUT"


# Email only if the job failed
- name: Email on failure
if: failure() && steps.gate.outputs.ok == 'true'
uses: dawidd6/action-send-mail@v3
with:
server_address: ${{ secrets.SMTP_HOST }}
server_port: ${{ secrets.SMTP_PORT }}
username: ${{ secrets.SMTP_USERNAME }}
password: ${{ secrets.SMTP_PASSWORD }}
subject: "VALD q15 FAILED — run #${{ github.run_number }} on ${{ github.ref_name }}"
to: ${{ secrets.ALERT_EMAIL_TO }}
from: VALD Bot <${{ secrets.ALERT_EMAIL_FROM }}>
content_type: text/html
body: |
<p><strong>Status:</strong> Failed</p>
<p><strong>Repo:</strong> ${{ github.repository }}<br/>
<strong>Run:</strong> <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">Open in GitHub</a><br/>
<strong>Commit:</strong> ${{ github.sha }}<br/>
<strong>Actor:</strong> ${{ github.actor }}</p>
<p><strong>Processing log (last 30 rows):</strong></p>
<pre>${{ steps.tail_logs.outputs.last }}</pre>
