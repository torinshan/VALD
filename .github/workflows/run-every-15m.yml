name: R → BigQuery every 15m (WIF)

on:
  schedule:
    - cron: "*/15 * * * *" # UTC; gate by Pacific hours below
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    concurrency:
      group: vald-q15
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
    env:
      GCP_PROJECT: sac-vald-hub
      BQ_DATASET: analytics
      BIGRQUERY_USE_BQ_STORAGE: 'false'
    steps:
    - name: Show current time (UTC/PT)
      run: 'echo "UTC now: $(date -u)"

        echo "LA  now: $(TZ=America/Los_Angeles date)"

        '
    - name: "Gate to 06:00\u201319:59 PT"
      id: gate
      shell: bash
      run: "LA_HOUR=$(TZ=America/Los_Angeles date +%H)\nif [ \"$LA_HOUR\" -ge 6 ]\
        \ && [ \"$LA_HOUR\" -lt 20 ]; then\n  echo \"ok=true\" >> \"$GITHUB_OUTPUT\"\
        \n  echo \"Proceeding (within 06:00\u201319:59 PT).\"\nelse\n  echo \"ok=false\"\
        \ >> \"$GITHUB_OUTPUT\"\n  echo \"Outside 06:00\u201319:59 PT \u2014 skipping.\"\
        \nfi\n"
    - name: Stop if gate says skip
      if: steps.gate.outputs.ok != 'true'
      run: exit 0
    - uses: actions/checkout@v4
      if: steps.gate.outputs.ok == 'true'
    - name: Authenticate to Google Cloud (WIF)
      id: auth
      if: steps.gate.outputs.ok == 'true'
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: projects/884700516106/locations/global/workloadIdentityPools/gha-pool/providers/github
        service_account: gha-bq@sac-vald-hub.iam.gserviceaccount.com
        create_credentials_file: true
        token_format: access_token
        access_token_lifetime: 3600s
    - name: Setup gcloud SDK
      if: steps.gate.outputs.ok == 'true'
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: sac-vald-hub
        install_components: bq
    - name: Test GCP Authentication
      if: steps.gate.outputs.ok == 'true'
      run: 'gcloud auth list

        bq ls --project_id="${GCP_PROJECT}" || echo "BigQuery test failed"

        '
    - uses: r-lib/actions/setup-r@v2
      if: steps.gate.outputs.ok == 'true'
      with:
        use-public-rspm: true
    - name: Install R dependencies (pak)
      if: steps.gate.outputs.ok == 'true'
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: 'DBI
          bigrquery
          dplyr
          tidyr
          readr
          stringr
          purrr
          tibble
          data.table
          hms
          lubridate
          httr
          jsonlite
          xml2
          curl
          valdr
          gargle
          rlang
          lifecycle
          glue
          slider'
        cache: true
    - name: System libs
      if: steps.gate.outputs.ok == 'true'
      run: "sudo apt-get update\nsudo apt-get install -y \\\n  libcurl4-openssl-dev\
        \ libssl-dev libxml2-dev \\\n  libfontconfig1-dev libfreetype6-dev libpng-dev\
        \ \\\n  libtiff5-dev libjpeg-dev zlib1g-dev \\\n  libharfbuzz-dev libfribidi-dev\
        \ \\\n  libsecret-1-dev libsecret-1-0\n"
    - name: Verify script exists
      if: steps.gate.outputs.ok == 'true'
      run: test -f .github/scripts/run.R
    - name: Run R pipeline
      if: steps.gate.outputs.ok == 'true'
      env:
        VALD_CLIENT_ID: ${{ secrets.VALD_CLIENT_ID }}
        VALD_CLIENT_SECRET: ${{ secrets.VALD_CLIENT_SECRET }}
        VALD_TENANT_ID: ${{ secrets.VALD_TENANT_ID }}
        VALD_REGION: use
      run: 'set -e

        Rscript .github/scripts/run.R

        '
    - name: Ensure BigQuery dataset exists
      if: steps.gate.outputs.ok == 'true' && always()
      run: 'bq mk --dataset --location=US "${GCP_PROJECT}:${BQ_DATASET}" || echo "Dataset
        exists or creation failed"

        '
    - name: Check processing logs (tail)
      id: tail_logs
      if: steps.gate.outputs.ok == 'true' && always()
      run: "{\n  bq query --use_legacy_sql=false --location=US --format=pretty \\\n\
        \    \"SELECT FORMAT_TIMESTAMP('%Y-%m-%d %H:%M:%S %Z', timestamp) AS ts, level,\
        \ message\n     FROM \\`${GCP_PROJECT}.${BQ_DATASET}.vald_processing_log\\\
        `\n     WHERE run_id = '${{ github.run_id }}'\n     ORDER BY timestamp DESC\n\
        \     LIMIT 30\";\n} 2>&1 | tee /tmp/log_tail.txt || echo \"No BigQuery logs\
        \ found for this run.\"\necho 'last<<EOF' >> \"$GITHUB_OUTPUT\"\ncat /tmp/log_tail.txt\
        \ >> \"$GITHUB_OUTPUT\"\necho 'EOF' >> \"$GITHUB_OUTPUT\"\n"
     - name: Send failure notification
        if: failure() && steps.gate.outputs.ok == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: your-email@gmail.com
          password: your-app-password-here
          subject: "VALD q15 FAILED — run #${{ github.run_number }} on ${{ github.ref_name }}"
          to: "torinshan@gmail.com, torin.shanahan@csus.edu"
          from: VALD Bot <vald-bot@example.com>
          html_body: |
            <p><strong>Status:</strong> Failed</p>
            <p><strong>Repo:</strong> ${{ github.repository }}<br/>
            <strong>Run:</strong> <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">Open in GitHub</a><br/>
            <strong>Commit:</strong> ${{ github.sha }}<br/>
            <strong>Actor:</strong> ${{ github.actor }}</p>
            <p><strong>Processing log (last 30 rows):</strong></p>
            <pre>${{ steps.tail_logs.outputs.last }}</pre>
